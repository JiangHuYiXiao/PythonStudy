# -*- coding:utf-8 -*-
# 1、类的命名空间
#     类有自己的命名空间
#     类调用静态属性：类名.静态属性
#     类调用动态属性：类名.方法名()
#     类不能调用对象的属性，报错 AttributeError: type object 'Course' has no attribute 'name'
#     对象调用属性时，如果自己的命名空间有该属性则使用自己的，如果自己的命名空间里面没有，则找类的，如果类中也没有，则报错。


# 2、对象命名空间
#     对象也有自己的独立命名空间
#     因为在对象中存在类对象指针，所以对象可以单方向去找类属性，但是类不能找对象命名空间的属性

# 3、调用静态属性时，尽量使用类去操作，因为使用对象去操作的话会导致会在对象对的命名空间里增加一个静态属性，
# 而不会使用类的静态属性，一直用对象的静态属性。

# 4、当静态属性时不可变数据类型时，修改静态属性尽量使用类去操作
#    当静态属性为可变数据类型时，修改静态属性是共享的，对象中新增静态属性是独立的

# 3、组合，
# 至少是有两个类
# 一个类的对象是另一个类的属性

# 4、包的导入
# 包的导入为啥会执行__init__()方法,这是因为，在python中一切都是对象，当我们使用import时，就是相当于实例化，所以会执行__init__()方法
# 会执行__init__()方法